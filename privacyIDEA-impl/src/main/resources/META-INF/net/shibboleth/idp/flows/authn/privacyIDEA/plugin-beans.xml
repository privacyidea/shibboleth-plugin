<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
       default-init-method="initialize"
       default-destroy-method="destroy">

    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
          p:placeholderPrefix="%{" p:placeholderSuffix="}"/>

    <bean class="net.shibboleth.shared.spring.config.IdentifiableBeanPostProcessor"/>
    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor"/>

    <bean id="initPIContext" class="org.privacyidea.action.InitializePIContext" scope="prototype"
          p:serverURL="%{privacyidea.server_url:#{'https://localhost'}}"
          p:realm="%{privacyidea.realm:#{null}}"
          p:verifySSL="%{privacyidea.verify_ssl:true}"
          p:defaultMessage="%{privacyidea.default_message:#{null}}"
          p:otpFieldHint="%{privacyidea.otp_field_hint:#{null}}"
          p:otpLength="%{privacyidea.otp_length:#{null}}"
          p:authenticationFlow="%{privacyidea.authentication_flow:#{'default'}}"
          p:serviceName="%{privacyidea.service_name:#{null}}"
          p:servicePass="%{privacyidea.service_pass:#{null}}"
          p:serviceRealm="%{privacyidea.service_realm:#{null}}"
          p:staticPass="%{privacyidea.static_pass:#{null}}"
          p:forwardHeaders="%{privacyidea.forward_headers:#{null}}"
          p:pollingInterval="%{privacyidea.polling_interval:#{null}}"
          p:pollInBrowser="%{privacyidea.poll_in_browser:false}"
          p:pollInBrowserUrl="%{privacyidea.poll_in_browser_url:#{null}}"
          p:pluginVersion="%{privacyidea.plugin_version:#{null}}"
          p:debug="%{privacyidea.debug:false}"/>

    <bean id="piAuthenticator" class="org.privacyidea.action.PrivacyIDEAAuthenticator" scope="prototype"
          p:httpServletRequestSupplier-ref="shibboleth.HttpServletRequestSupplier"/>

    <bean id="validateResponseStandalone" scope="prototype" class="org.privacyidea.action.ValidateResponseStandalone"/>

    <bean id="alternativeAuthenticationFlows" class="org.privacyidea.action.AlternativeAuthenticationFlows" scope="prototype"
          p:httpServletRequestSupplier-ref="shibboleth.HttpServletRequestSupplier"/>
</beans>
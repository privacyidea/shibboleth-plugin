#*
 Velocity Template.

 Velocity context will contain the following properties:
   - flowExecutionUrl - the form action location
   - flowRequestContext - the Spring Web Flow RequestContext
   - flowExecutionKey - the SWF execution key (this is built into the flowExecutionUrl)
   - profileRequestContext - root of context tree
   - authenticationContext - context with authentication request information
   - authenticationErrorContext - context with login error state
   - authenticationWarningContext - context with login warning state
   - rpUIContext - the context with SP UI information from the metadata
   - rpContext - RelyingPartyContext
   - encoder - HTMLEncoder class
   - request - HttpServletRequest
   - response - HttpServletResponse
   - environment - Spring Environment object for property resolution
   - custom - arbitrary object injected by deployer
   - piContext - privacyIDEA Context
   - piFormContext - privacyIDEA Form Context.
*#
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">
    <title>#springMessageText('$titleMessageTextProperty', 'privacyIDEA Authentication')</title>
    <link rel="stylesheet" type="text/css" href="$request.getContextPath()#springMessageText('idp.css', '/css/placeholder.css')">
    <link rel="stylesheet" type="text/css" href="$request.getContextPath()/css/pi-main.css">
    <script type="text/javascript" src='$request.getContextPath()/js/pi-webauthn.js'></script>
    <script type="text/javascript" src='$request.getContextPath()/js/pi-pollTransaction.worker.js'></script>
    <script type="text/javascript" src="$request.getContextPath()/js/pi-utils.js"></script>
    <script type="text/javascript" src="$request.getContextPath()/js/pi-main.js"></script>
    <script type="text/javascript" src="$request.getContextPath()/js/pi-eventListeners.js"></script>
</head>

<body>
<div class="wrapper">
    <div class="container">
        <header>
            <img class="main-logo" src="$request.getContextPath()#springMessageText('idp.logo', '/images/placeholder-logo.png')" alt="#springMessageText('idp.logo.alt-text', 'logo')">
            #set ($serviceName = $rpUIContext.serviceName)
            #if ($serviceName && !$rpContext.getRelyingPartyId().contains($serviceName))
                <h1>#springMessageText('idp.login.loginTo', 'Login to ') $encoder.encodeForHTML($serviceName)</h1>
            #end
        </header>

        <div class="content">
            <div class="column one">
                <div id="description and logo">
                    #*
                     SP Description & Logo (optional)
                     These idpui lines will display added information (if available
                     in the metadata) about the Service Provider (SP) that requested
                     authentication. These idpui lines are "active" in this example
                     (not commented out) - this extra SP info will be displayed.
                     Remove or comment out these lines to stop the display of the
                     added SP information.
                    *#
                    #set ($logo = $rpUIContext.getLogo())
                    #if ($logo)
                        <img class="service-logo" src="$encoder.encodeForHTMLAttribute($logo)" alt="$encoder.encodeForHTMLAttribute($serviceName)">
                    #end
                    #set ($desc = $rpUIContext.getServiceDescription())
                    #if ($desc)
                        <p>$encoder.encodeForHTML($desc)</p>
                    #end
                </div>
                ## todo test form in column two and help in column three
                <div id="privacyidea">
                    <form id="username-password-form" action="$flowExecutionUrl" method="post" autocomplete="off">
                        #parse('csrf/csrf.vm')
                        <div class="content">
                            <div class="form-element-wrapper" id="message">
                                <p>Please enter the username and password</p>
                                <br>
                            </div>

                            ## USERNAME, PASSWORD & SUBMIT ##
                            <div class="form-element-wrapper" id="usernameAndPassword">
                                <label for="username">Username</label>
                                <input id="username" class="form-element form-field" name="username" type="text" autofocus value="">

                                <label for="password">Password</label>
                                <input id="password" class="form-element form-field" name="password" type="password" autofocus value="">
                                <br>
                            </div>
                            <div class="form-element-wrapper" id="submit">
                                <button class="form-element-button" id="username-pass-form-submit-button" type="submit" name="_eventId_proceed">Submit</button>
                                <br><br>
                            </div>

                            ## FORM OPTIONS ##
                            <div class="form-options">
                                <input id="mode" name="mode" value='$piContext.getMode()' type="hidden">
                                <input id="errorMessage" name="errorMessage" value="" type="hidden">
                                <input id="silentModeChange" name="silentModeChange" value="0" type="hidden">
                                <input id="webauthnSignRequest" name="webauthnSignRequest" value='$piContext.getWebauthnSignRequest()' type="hidden">
                                <input id="webauthnSignResponse" name="webauthnSignResponse" value="" type="hidden">
                                <input id="origin" name="origin" value="" type="hidden">
                                <input id="isPushAvailable" name="isPushAvailable" value='$piContext.getIsPushAvailable()' type="hidden">
                                <input id="pollingInterval" name="pollingInterval" value='$piFormContext.getPollingInterval()' type="hidden">
                                <input id="pollInBrowserUrl" name="pollInBrowserUrl" value='$piFormContext.getPollInBrowserUrl()' type="hidden">
                                <input id="transactionID" name="transactionID" value='$piContext.getTransactionID()' type="hidden">
                                <input id="pollInBrowserFailed" name="pollInBrowserFailed" value='$piFormContext.getPollInBrowserFailed()' type="hidden">
                                <input id="passkeyRegistration" name="passkeyRegistration" value='$piContext.getPasskeyRegistration()' type="hidden">
                                <input id="passkeyRegistrationResponse" name="passkeyRegistrationResponse" value="" type="hidden">
                                <input id="passkeyChallenge" name="passkeyChallenge" value='$piContext.getPasskeyChallenge()' type="hidden">
                                <input id="passkeyLoginCancelled" name="passkeyLoginCancelled" value="0" type="hidden">
                                <input id="passkeySignResponse" name="passkeySignResponse" value="" type="hidden">
                                <input id="passkeyLoginRequested" name="passkeyLoginRequested" value="0" type="hidden">
                                <input id="otpLength" name="otpLength" value='$piFormContext.getOtpLength()' type="hidden">
                            </div>

                            ## PASSKEY ##
                            <div class="form-element-wrapper" id="passkey">
                                ## PASSKEY AUTHENTICATION ##
                                #if ((!$piContext.getPasskeyRegistration() || $piContext.getPasskeyRegistration() == "")
                                && $piContext.getMode() != "passkey")
                                    <button class="form-element-button" id="passkeyButton" type="button" name="passkeyButton">Sign in with Passkey</button>
                                    <br><br>
                                #end
                                #if ($piContext.getPasskeyChallenge() && $piContext.getPasskeyChallenge() != "")
                                    <script>passkeyAuthentication()</script>
                                    <button class="form-element-button" id="passkeyRetryButton" type="button" name="passkeyRetryButton"
                                            onclick="passkeyAuthentication()">Retry Passkey Login</button>
                                    <br><br>
                                #end
                            </div>
                        </div>
                    </form>
                </div>
            </div>

            <div class="column two" id="help">
                <ul class="list list-help">
                    <li class="list-help-item">
                        <a href="#springMessageText('idp.url.helpdesk', '#')">
                            <span class="item-marker">&rsaquo;</span>
                            #springMessageText('idp.login.needHelp', 'Need Help?')
                        </a>
                    </li>
                </ul>
            </div>
        </div>
    </div>

    <footer>
        <div class="container container-footer">
            <p class="footer-text">#springMessageText('idp.footer', 'Insert your footer text here.')</p>
        </div>
    </footer>
</div>
</body>
</html>